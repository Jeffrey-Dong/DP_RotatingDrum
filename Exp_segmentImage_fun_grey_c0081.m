function [BW,maskedImage] = Exp_segmentImage_fun_grey_c0081(X)
%segmentImage Segment image using auto-generated code from imageSegmenter app
%  [BW,MASKEDIMAGE] = segmentImage(X) segments image X using auto-generated
%  code from the imageSegmenter app. The final segmentation is returned in
%  BW, and a masked image is returned in MASKEDIMAGE.

% Auto-generated by imageSegmenter app on 22-May-2022
%----------------------------------------------------


% Graph cut
foregroundInd = [620753 620758 626142 626147 628326 628333 629382 629417 629423 629424 634782 634830 635862 636995 641264 642400 646664 648824 649962 649967 655372 658550 660710 660774 664014 666110 668339 671513 673673 673744 676984 676987 677993 680153 680227 680231 685553 688875 689873 689875 694282 695362 697435 700764 702835 706081 706170 708330 713735 714721 717961 719137 722281 729942 734267 736321 739669 742914 748319 753601 762368 769930 771961 774121 784921 787081 791401 793701 798961 799103 803281 807743 815308 825961 834601 840001 845557 846475 851875 858355 858517 863755 866082 875802 876715 877962 883364 885355 897404 906953 916673 919009 930710 934135 939350 943670 955735 964180 965260 969778 970660 979295 987929 991378 996778 1000888 1003258 1011898 1012762 1021400 1030040 1033504 1035433 1038904 1044073 1048624 1057029 1072142 1081024 1087252 1096144 1104521 1106944 1109921 1111000 1114504 1116400 1116664 1122064 1127464 1131513 1139344 1145542 1149064 1154175 1158488 1167127 1175761 1176055 1180080 1194108 1196266 1199809 1206284 1208140 1210295 1211684 1214922 1215693 1220008 1223557 1232194 1235116 1238670 1242669 1245904 1246222 1247297 1251301 1254532 1254536 1258852 1262409 1263169 1263483 1269642 1275349 1277190 1277192 1278581 1282590 1282896 1290137 1290453 1293368 1293689 1298765 1299084 1305239 1305554 1306312 1310949 1312786 1314184 1322492 1325730 1336848 1337926 1341915 1344069 1344070 1353034 1358094 1365650 1369962 1369965 1373539 1377515 1379675 1385070 1389383 1393698 1396933 1397281 1403410 1405567 1405911 1412039 1424987 1424991 1439014 1444758 1447647 1447993 1459858 1460594 1460932 1468147 1468484 1472790 1492204 1495113 1499433 1499749 1502680 1503753 1506993 1507304 1511313 1511614 1515633 1519958 1526715 1530765 1531850 1535333 1538335 1539417 1543954 1545902 1551500 1553474 1553477 1558882 1558885 1558893 1558894 1558916 1558929 1558944 1558957 1558972 1558983 1558991 1559004 1559016 1559017 1559029 1559042 ];
backgroundInd = [88146 88167 88186 88194 88200 88211 88212 93519 93633 93651 93666 96920 103215 103413 103422 103430 108837 111012 111822 122904 123674 126156 132300 138058 144550 146312 157526 161402 175416 187283 188874 200232 204008 211570 211575 215340 219140 232108 240756 243394 255883 271018 276423 287644 294791 315322 323965 337303 347732 357452 359612 370768 373659 390939 401739 422263 424745 438197 438222 438226 442491 442492 442498 442502 442550 442553 445725 445798 446026 457590 457593 462009 465146 465466 468382 468499 469010 473903 480386 481335 481338 481471 487807 487954 492127 493359 494287 494626 499687 500026 502921 503561 505242 508321 516047 516226 520841 523614 528837 529019 541066 543068 550437 552793 562317 571167 578517 583183 584135 593637 594940 598182 602502 604783 605747 606597 613705 614161 616552 625195 629287 630600 637927 638259 641405 642861 653055 653288 653372 664935 668416 670576 677902 678982 683605 684386 684626 690085 691946 692188 692242 697637 701673 701913 703034 706242 706249 706259 706260 706265 706270 710313 718953 721120 726520 734080 739481 761087 767044 768651 776211 780531 783771 792411 795120 795651 799971 805371 815091 821035 825891 826971 831835 837771 839931 847491 852353 859371 862607 874487 882047 897167 899861 913360 918760 923618 927400 931720 933880 939280 952240 966273 971673 972753 978150 986786 991106 999742 1000275 1005138 1013772 1018092 1025648 1028887 1041840 1047240 1052100 1052629 1053709 1060186 1062342 1067737 1073133 1076364 1076368 1080682 1086077 1089315 1094710 1094715 1097944 1097945 1098526 1101174 1101178 1108727 1108732 1108734 1113044 1113047 1118444 1120599 1125522 1125993 1125994 1131388 1133543 1138936 1138941 1145409 1154044 1158362 1163757 1171949 1172389 1178864 1179937 1179940 1186417 1187487 1199360 1202594 1203268 1205829 1211222 1215533 1219846 1221620 1226321 1227394 1233861 1233869 1234941 1241410 1241413 1250037 1262975 1264813 1270528 1273757 1278077 1282389 1289936 1312594 1313669 1322302 1324456 1325283 1334168 1334849 1334852 1334857 1337017 1337401 1342398 1342401 1342417 1346737 1348194 1349042 1349949 1354266 1354269 1354297 1357894 1358586 1361857 1368301 1370497 1371917 1372986 1376941 1382341 1384537 1384865 1388099 1388995 1389937 1394221 1394257 1396417 1399972 1401775 1408607 1409377 1423719 1425533 1426791 1432057 1437413 1440827 1441728 1445017 1450706 1453608 1455765 1465485 1465537 1468721 1471221 1474301 1479516 1480593 1480596 1484908 1487137 1488143 1495901 1496054 1500014 1500016 1500092 1503461 1511882 1514406 1516191 1520503 1520612 1523738 1523743 1534522 1534527 1535596 1540052 1542336 1544225 1551770 1558236 1563631 1563808 1565779 1571161 1577626 1577633 1583013 1585672 1591648 1594171 1595128 1598118 1603768 1606738 1615367 1617808 1621833 1628731 1634768 1639068 1642267 1642272 1642305 1645138 1645143 1645146 1645154 1645160 1645167 1645171 1645174 1645178 1645185 1645190 1645197 1645211 1645215 1645222 1646585 1646968 1650535 1650538 1650630 1650640 1650644 1650647 1650655 1650657 1650666 1650679 1650691 1650699 1650712 1650922 1650927 1652487 1653074 1653770 1653772 1654528 1657215 1657228 1657248 1657251 1657256 1657257 1657367 1658084 1658342 1658347 1658349 1658359 1658360 1658370 1658372 1658377 1658378 1658383 1658389 1658394 1658402 1658414 1658419 1658426 1662399 1666408 1669901 1669952 1674087 1676428 1677508 1682608 1689381 1692621 1701257 1702052 1704497 1705407 1708814 1716368 1718252 1725008 1736886 1740126 1740937 1741044 1743360 1744437 1744440 1748499 1751997 1756164 1756317 1760379 1764953 1769026 1771428 1772508 1776684 1776804 1777670 1783304 1784381 1784384 1789550 1790861 1791941 1796257 1798284 1802737 1803817 1814613 1819884 1820870 1824333 1831890 1834910 1836210 1839439 1839444 1843550 1844844 1845804 1850242 1853482 1857802 1859959 1870550 1876044 1894304 1901964 1920328 1925728 1933293 1934374 1938584 1939774 1945180 1947345 1959099 1959238 1959239 1968980 1972055 1977455 1979799 1980202 1980210 1980222 1980231 1980245 1980262 1980270 1980283 1980303 1980316 1980322 1980342 1985584 1986290 1986841 1986866 1986874 1986884 1986898 1987172 1987371 1987672 1987698 1987730 1987991 1988004 1993422 1993869 1994108 1999459 1999910 1999913 2001202 2002088 2003610 2003622 2003746 2003754 2003764 2009043 2009065 2009072 2009103 2009127 2009837 2013988 2013995 2016315 2018470 2022648 2022783 2022785 2024822 2024829 2024933 2031322 2031330 2036737 2036747 2036749 2036762 2036773 2036779 2036781 2036793 2036798 2036803 ];
L = superpixels(X,10468);
BW = lazysnapping(X,L,foregroundInd,backgroundInd);

% Create masked image.
maskedImage = X;
maskedImage(~BW) = 0;
end

